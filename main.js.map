{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/login/components/enter.component.ts","webpack:///./src/app/auth/login/components/login/login.component.css","webpack:///./src/app/auth/login/components/login/login.component.html","webpack:///./src/app/auth/login/components/login/login.component.ts","webpack:///./src/app/auth/login/login-routing.module.ts","webpack:///./src/app/auth/login/login.module.ts","webpack:///./src/app/auth/login/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\n/**\n * Quando a minha aplicação receber uma chamada na index, \n * redirecionar para a minha porta de login\n */\nexport const routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule(\n    {\n        imports: [RouterModule.forRoot(routes)],\n        exports: [RouterModule]\n    }\n)\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularseed';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material';\n\nimport { LoginModule } from './auth/login/login.module';\nimport { LoginRoutingModule } from './auth/login/login-routing.module';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    LoginModule,\n    LoginRoutingModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * Component responsable to redirect to login a user in the system\n * Child route\n */\nimport { Component } from '@angular/core';\n\n@Component({\n    template: '<router-outlet></router-outlet>'\n})\nexport class EnterComponent { }\n","module.exports = \".login-panel {\\n    max-width: 90%;\\n    width: 500px;  \\n    margin-top: 10%; \\n}\\n\"","module.exports = \"<form [formGroup]=\\\"form\\\" fxLayoutAlign=\\\"center\\\" novalidate>\\n  <mat-card class=\\\"login-panel\\\">\\n    <mat-toolbar color=\\\"primary\\\">\\n      <span class=\\\"fill-field\\\">Login</span>\\n    </mat-toolbar>\\n    <br>\\n    <br>\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"100\\\">\\n          <input matInput type=\\\"email\\\" placeholder=\\\"Digite seu email\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\n          <mat-hint>Digite seu email</mat-hint>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"100\\\">\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Digite sua senha\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n          <mat-hint>Digite sua senha</mat-hint>\\n        </mat-form-field>\\n        <span matTooltip=\\\"Senha deve conter ao menos 6 caracteres\\\">\\n          <mat-icon>help</mat-icon>\\n        </span>\\n      </div>\\n      <br><br>\\n      <div fxLayoutAlign=\\\"center\\\">\\n        <!--<button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"login()\\\">-->\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">\\n          Entrar\\n        </button>\\n      </div>\\n      <br><br>\\n      <div fxLayoutAlign=\\\"center\\\">\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/cadastro-pf\\\">\\n          Cadastro Público Externo\\n        </a>\\n        <a mat-button color=\\\"primary\\\" routerLink=\\\"/cadastro-pj\\\">\\n          Cadastrar Público Interno\\n        </a>\\n      </div>\\n    </div>\\n  </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\n/**\n * FormBuilder => Ajuda a criar o mapeamento do forms\n * FormGroup => Agrupa Componentes\n * Validators => Valida entrada de dados como email, tamanho, required\n * Router=> redirecionamento para outro componente de login,\n * MatsnackBar => exibe mensagens de erro e de sucesso\n */\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n//Import model\nimport { Login } from '../../models/login.model';\n//Import Service\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,//Importando os recursos para o componente\n    private snackbar: MatSnackBar,\n    private router: Router,\n    private loginService: LoginService\n  ) { }\n\n\n  ngOnInit() {\n    //Método responsável por criar o formulário na instância do objeto\n    this.generateForm();\n  }\n\n  generateForm() {\n    this.form = this.fb.group({\n      //Primeiro parâmetro seria o valor default pra ser exibido no formulário\n      //O segundo parâmetro são os arrays de validações\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  login() {\n    //invalid é sempre true quando os validadores não são atendidos\n    if (this.form.invalid) {\n      this.snackbar.open(\"Dados inválidos\", \"Erro\", { duration: 5000 });\n      return;\n    }\n    //Adicionando os dados válidos do formulário dentro da classe login\n    const login: Login = this.form.value;\n    //Conectando com API\n    console.log('Conectando com API');\n    /*\n      Disparamos uma requisição para a API, nosso método retorna um observable, o qual quando receber alguma resposta\n      deve retornar um subscribe, que nos permite ler os dados de retorno.\n      Com a resposta retornando o token gerado pelo laravel, podemos armazenar o token localmente para que \n      após logado o usuário possa acessar as demais rotas\n     */\n    this.loginService.login(login).subscribe(\n      //Caso sucesso\n      data => {\n        console.log(JSON.stringify(data));\n        localStorage['token'] = data['data']['token'];\n        const userData = JSON.parse(\n          //O atob decodifica em base64 para decodificarmos o JWT\n          atob(data['data']['token'].split('.')[1])\n        );\n        console.log('Dados do usuario', JSON.stringify(userData));\n        if (userData['role'] == 'ROLE_ADMIN') {\n          alert('Deve redirecionar para a página de admin');\n          //this.router.navigate(['/admin']);\n        } else if (userData['role'] == 'ROLE_INTERN') {\n          alert('Deve redirecionar para a página de funcionários seeduc');\n          //this.router.navigate(['/intern']);\n        } else {\n          alert('Deve redirecionar para página de usuário externo');\n          //this.router.navigate(['/extern']);\n        }\n      },\n      err => {\n        console.log('DEU RUIM NO LOGIN');\n        let msg: string = 'Tente novamente em instantes ou nos contate em : (13) 99703-5994';\n        if (err['status'] = 401) {\n          msg = 'Email/Senha inválido(s)';\n        }\n        this.snackbar.open(msg, \"Erro\", { duration: 5000 });\n      }\n    )\n    alert(JSON.stringify(this.form.value));\n  }\n\n  logout() {\n    localStorage['token'] = null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { EnterComponent } from './components/enter.component';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nexport const LoginRoutes: Routes = [\n    {\n        path: 'login',\n        component: EnterComponent,\n        children: [{ path: '', component: LoginComponent }]\n    }\n]\n\n\n@NgModule({\n    imports: [RouterModule.forChild(LoginRoutes)],\n    exports: [RouterModule]\n})\n\n\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n//Formulário reativo\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { EnterComponent } from './components/enter.component';\nimport { LoginService } from './services/login.service';\n\n//Angular Material\nimport {\n  MatInputModule,\n  MatButtonModule,\n  MatListModule,\n  MatTooltipModule,\n  MatIconModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatToolbarModule,\n} from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatButtonModule,\n    MatListModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatSnackBarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatToolbarModule\n  ],\n  declarations: [LoginComponent, EnterComponent],\n  providers: [\n    LoginService\n  ]\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';//injetar o serviço\nimport { Observable } from 'rxjs';//acesso a apis externas de modo assincrono \n\nimport { HttpClient } from '@angular/common/http';//responsável pelo acesso http a nossa api externa\nimport { environment as env } from '../../../../environments/environment';\n\nimport { Login } from '../models/login.model';\n\n\n@Injectable()\n\nexport class LoginService {\n\n  private readonly PATH: string = 'login';\n  constructor(private http: HttpClient) { }\n\n  /**\n   * O observable envia a requisição e fica escutando a porta pra ver se chegou a resposta\n   * Bate no endpoint auth enviando o objeto que possui as credenciais do usuário\n   * @param login \n   */\n  login(login: Login): Observable<any> {\n    return this.http.post(env.baseApiUrl + this.PATH, login);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8000/',\n  baseApiUrl: 'http://localhost:8000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}